[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "analizador-sentencias-ipp"
version = "2.0.0"
description = "Sistema inteligente de análisis automático de resoluciones administrativas y sentencias judiciales para casos de IPP, RAP e INSS"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Tu Nombre", email = "tu-email@ejemplo.com"}
]
maintainers = [
    {name = "Tu Nombre", email = "tu-email@ejemplo.com"}
]
keywords = ["legal", "analysis", "ipp", "inss", "fastapi", "ai", "machine-learning"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Legal Industry",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Text Processing :: Linguistic",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
    "Framework :: FastAPI",
]
requires-python = ">=3.8"
dependencies = [
    "fastapi>=0.100.0",
    "uvicorn[standard]>=0.20.0",
    "jinja2>=3.1.0",
    "python-multipart>=0.0.6",
    "aiofiles>=23.0.0",
    "python-docx>=0.8.11",
    "PyPDF2>=3.0.0",
    "scikit-learn>=1.3.0",
    "nltk>=3.8.0",
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "requests>=2.31.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "bandit>=1.7.0",
    "safety>=2.0.0",
]
docker = [
    "gunicorn>=20.1.0",
]
monitoring = [
    "prometheus-client>=0.17.0",
    "structlog>=23.0.0",
]

[project.urls]
Homepage = "https://github.com/tu-usuario/analizador-sentencias-ipp"
Documentation = "https://github.com/tu-usuario/analizador-sentencias-ipp#readme"
Repository = "https://github.com/tu-usuario/analizador-sentencias-ipp"
"Bug Tracker" = "https://github.com/tu-usuario/analizador-sentencias-ipp/issues"
"Changelog" = "https://github.com/tu-usuario/analizador-sentencias-ipp/releases"

[project.scripts]
analizador-sentencias = "sentencias_app.main:app"

[tool.setuptools.packages.find]
where = ["."]
include = ["sentencias_app*"]
exclude = ["tests*", "docs*"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "venv",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["sentencias_app"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
